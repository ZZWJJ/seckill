https://github.com/bootsrc/jseckill#%E7%A7%92%E6%9D%80%E8%BF%87%E7%A8%8B

技术栈
Spring Boot 2.X
MyBatis
Redis, MySQL
Thymeleaf + Bootstrap
RabbitMQ（kafka）
Zookeeper, Apache Curator

秒杀过程
秒杀进行的过程包含两步骤： 步骤一（秒杀）：在Redis里进行秒杀。 这个步骤用户并发量非常大，抢到后，给与30分钟的时间等待用户付款， 如果用户过期未付款，则Redis库存加1 ，算用户自动放弃付款。

步骤二（付款）：用户付款成功后，后台把付款记录持久化到MySQL中，这个步骤并发量相对小一点，使用数据库的事务解决数据一致性问题

下面重点讲步骤一，秒杀过程

秒杀步骤流程图

流程图Step1：

1.先经过Nginx负载均衡;

2.Nginx里面通过配置文件配置限流功能，限流算法是漏统桶法;

3.Redis判断是否秒杀过。避免重复秒杀。如果没有秒杀过
把用户名（这里是手机号）和seckillId封装成一条消息发送到RabbitMQ，请求变成被顺序串行处理
立即返回状态“排队中”到客户端上，客户端上回显示“排队中...”

4.后台监听RabbitMQ里消息，每次取一条消息，并解析后，请求Redis做库存减1操作（decr命令）
并手动ACK队列 如果减库存成功，则在Redis里记录下库存成功的用户手机号userPhone.

5.流程图Step2：客户端排队成功后，定时请求后台查询是否秒杀成功，后面会去查询Redis是否秒杀成功
如果抢购成功，或者抢购失败则停止定时查询， 如果是排队中，则继续定时查询。